/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-04-10 02:54:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.day05;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class write_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	#bbs table {\r\n");
      out.write("	    width:580px;\r\n");
      out.write("	    margin:0 auto;\r\n");
      out.write("	    margin-top:20px;\r\n");
      out.write("	    border:1px solid black;\r\n");
      out.write("	    border-collapse:collapse;\r\n");
      out.write("	    font-size:14px;\r\n");
      out.write("	    \r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#bbs table caption {\r\n");
      out.write("	    font-size:20px;\r\n");
      out.write("	    font-weight:bold;\r\n");
      out.write("	    margin-bottom:10px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#bbs table th {\r\n");
      out.write("	    text-align:center;\r\n");
      out.write("	    border:1px solid black;\r\n");
      out.write("	    padding:4px 10px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#bbs table td {\r\n");
      out.write("	    text-align:left;\r\n");
      out.write("	    border:1px solid black;\r\n");
      out.write("	    padding:4px 10px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.no {width:15%}\r\n");
      out.write("	.subject {width:30%}\r\n");
      out.write("	.writer {width:20%}\r\n");
      out.write("	.reg {width:20%}\r\n");
      out.write("	.hit {width:15%}\r\n");
      out.write("	.title{background:lightsteelblue}\r\n");
      out.write("	.odd {background:silver}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"bbs\">\r\n");
      out.write("	<form method=\"post\" encType=\"multipart/form-data\">\r\n");
      out.write("		<table summary=\"게시판 글쓰기\">\r\n");
      out.write("			<caption>게시판 글쓰기</caption>\r\n");
      out.write("			<tbody>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>제목:</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"subject\" size=\"45\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>이름:</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"writer\" size=\"12\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>내용:</th>\r\n");
      out.write("					<td><textarea name=\"content\" cols=\"50\" \r\n");
      out.write("							rows=\"8\"></textarea></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>첨부파일:</th>\r\n");
      out.write("					<td><input type=\"file\" name=\"file_name\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>비밀번호:</th>\r\n");
      out.write("					<td><input type=\"password\" name=\"pwd\" size=\"12\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<input type=\"button\" value=\"보내기\" onclick=\"bbs_write_ok(this.form)\">\r\n");
      out.write("						<input type=\"reset\" value=\"다시\">\r\n");
      out.write("						<input type=\"button\" value=\"목록\" onclick=\"bbs_list(this.form)\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("	</form>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		function bbs_write_ok(f){\r\n");
      out.write("			f.action=\"/bbs_write_ok\";\r\n");
      out.write("			f.submit();\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		function bbs_list(f){\r\n");
      out.write("			f.action=\"/day05\";\r\n");
      out.write("			f.submit();\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
