/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-04-04 06:03:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.day02;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class input_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<h2>Day02</h2>\r\n");
      out.write("	<form action=\"/logIn01\" method=\"post\">\r\n");
      out.write("		<label>ID: <input type=\"text\" name=\"userId\" required=\"required\"></label>\r\n");
      out.write("		<label>PW: <input type=\"password\" name=\"userPw\" required=\"required\"></label>\r\n");
      out.write("	\r\n");
      out.write("		<input type=\"submit\" value=\"로그인\">\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	<!-- dispatcher servlet갔다가 controller가야함 -->\r\n");
      out.write("	<form action=\"/calc\" method=\"get\">\r\n");
      out.write("		<label>수1: <input type=\"number\" name=\"s1\" required></label>\r\n");
      out.write("		<label>수2: <input type=\"number\" name=\"s2\" required></label>\r\n");
      out.write("		<p> 연산자 :\r\n");
      out.write("			<input type=\"radio\" name=\"op\" value=\"+\" checked>+\r\n");
      out.write("			<input type=\"radio\" name=\"op\" value=\"-\">-\r\n");
      out.write("			<input type=\"radio\" name=\"op\" value=\"*\">*\r\n");
      out.write("			<input type=\"radio\" name=\"op\" value=\"/\">/\r\n");
      out.write("		\r\n");
      out.write("			<input type=\"submit\" value=\"계산\">\r\n");
      out.write("		</p>\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	<form action=\"/hobby\" method= \"post\">\r\n");
      out.write("		<p>취미:\r\n");
      out.write("			<input type=\"checkbox\" name=\"hobby\" value=\"축구\"> 축구\r\n");
      out.write("			<input type=\"checkbox\" name=\"hobby\" value=\"야구\"> 야구\r\n");
      out.write("			<input type=\"checkbox\" name=\"hobby\" value=\"농구\"> 농구\r\n");
      out.write("			<input type=\"checkbox\" name=\"hobby\" value=\"베구\"> 배구\r\n");
      out.write("\r\n");
      out.write("		</p>\r\n");
      out.write("		<input type=\"submit\" value=\"보내기\">\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<button onclick=\"getBookList()\"> book 테이블 정보 보기</button>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		function getBookList(){\r\n");
      out.write("			location.href=\"/bookList\";\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
