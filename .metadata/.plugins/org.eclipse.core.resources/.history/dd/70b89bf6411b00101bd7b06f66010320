package com.ict.edu08.controller;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.ict.edu08.service.ShopService;
import com.ict.edu08.vo.CartVO;
import com.ict.edu08.vo.ShopVO;
import com.ict.edu09.vo.MembersVO;

@Controller
public class ShopController {

	
	@Autowired
	private ShopService shopService;
	
	@GetMapping("/day08")
	public ModelAndView getShopList(String category) {
		try {
			
			ModelAndView mv = new ModelAndView();
			if(category == null) {
				category = "ele002";
				
			}
			List<ShopVO> shop_list = shopService.getShopList(category);
			
			
			if(shop_list != null) {
				mv.addObject("shop_list", shop_list);
				mv.setViewName("day08/product_list");
				return mv;
			}else {
				mv.setViewName("day08/error");
				return mv;
				
				
			}
			
		} catch (Exception e) {
			e.printStackTrace();
			return new ModelAndView("day08/error");
		}
		
	}
	
	
	@GetMapping("/shop_detail")
	public ModelAndView getShopDetail(@RequestParam("shop_idx") String shop_idx) {
		try {
			
			ModelAndView mv = new ModelAndView();
			ShopVO svo = shopService.getShopDetail(shop_idx);
			if(svo != null) {
				mv.addObject("svo", svo);
				mv.setViewName("day08/product_content");
				return mv;
			}else {
				mv.setViewName("day08/error");
				return mv;
				
				
			}
			
		} catch (Exception e) {
			e.printStackTrace();
			return new ModelAndView("day08/error");
		}
		
	}
	
	
	@GetMapping("/shop_show_cart")
	public ModelAndView getShopShowCart(HttpSession session) {
		try {
			String loginchk = (String) session.getAttribute("loginchk");
			if(loginchk.equals("ok")) {
				ModelAndView mv = new ModelAndView();
				
				
				// 로그인한 사람의 정보를 가져와서 cart 테이블에서 검색 후 cartList에 넘기자
				MembersVO membersVO = (MembersVO) session.getAttribute("membersVO");
				List<CartVO> cart_list = shopService.getCartList(membersVO.getM_id());
				if(cart_list != null) {
					
					mv.addObject("cart_list", cart_list);
					
				}
				mv.setViewName("day08/cartList");
				return mv;
				
			}else {
				return new ModelAndView("redirect:/members_loginForm");
				
				
			}
		} catch (Exception e) {
			e.printStackTrace();
			return new ModelAndView("redirect:/members_loginForm");
		}
		
	}
	
	@GetMapping("/shop_add_cart")
	public ModelAndView showAddCart(@ModelAttribute("shop_idx") String shop_idx,
			HttpSession session) {
	
			try {
				String loginchk = (String) session.getAttribute("loginchk");
				if(loginchk.equals("ok")) {
					ModelAndView mv = new ModelAndView();
					
					
					// 사용자 정보
					MembersVO mvo = (MembersVO)session.getAttribute("membersVO");
					
					// 제품 정보 가져오기
					ShopVO svo = shopService.getShopDetail(shop_idx);
					
					// cart 테이블에 제품정보중 pk(p_num)와 사용자 ID
					mv.setViewName("redirect:/shop_detail");
					return mv;
					
				}else {
					return new ModelAndView("redirect:/members_loginForm");
					
					
				}
			} catch (Exception e) {
				e.printStackTrace();
				return new ModelAndView("redirect:/members_loginForm");
			}
	}
}
